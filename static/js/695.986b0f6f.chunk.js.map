{"version":3,"file":"static/js/695.986b0f6f.chunk.js","mappings":"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","sources":["axios/axios-orders.js","webpack://online-store/./src/components/general/UI/Alert/Alert.module.css?c9f1","components/general/UI/Alert/Alert.js","webpack://online-store/./src/components/general/UI/Button/Button.module.css?6c05","components/general/UI/Button/Button.js","webpack://online-store/./src/components/general/UI/Form/Form.module.css?138a","components/general/UI/Form/Form.js","webpack://online-store/./src/components/general/UI/Input/Input.module.css?a495","axios/axios-upload.js","components/general/UI/Input/Input.js","webpack://online-store/./src/components/general/UI/Loader/Loader.module.css?ddc0","components/general/UI/Loader/Loader.js","webpack://online-store/./src/components/general/UI/SectionTitle/SectionTitle.module.css?6e39","components/general/UI/SectionTitle/SectionTitle.js","webpack://online-store/./src/components/profile/ProfileShow/ProfileShow.module.css?a6e6","components/profile/ProfileShow/ProfileShow.js","webpack://online-store/./src/components/profile/ProfileEdit/ProfileEdit.module.css?02b0","components/profile/ProfileEdit/ProfileEdit.js","containers/Layout/Profile/Profile.js","containers/Layout/Profile/store/actions/actionCreators.js","hoc/withRouter/withRouter.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://amh-store.herokuapp.com/api/v1/orders',\r\n});\r\n\r\nexport default instance; ","// extracted by mini-css-extract-plugin\nexport default {\"Alert\":\"Alert_Alert__IpMo7\"};","import React from \"react\";\r\nimport classes from \"./Alert.module.css\";\r\n\r\nconst Alert = props => {\r\n  return <div className={classes.Alert}>{props.children}</div>;\r\n};\r\n\r\nexport default Alert;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"Button_Button__Ip4AH\"};","import React from \"react\";\r\nimport classes from \"./Button.module.css\";\r\n\r\nconst Button = props => {\r\n  const outStyles = {\r\n    fontWeight: props.fontWeight,\r\n    padding: props.padding,\r\n    fontSize: props.fontSize,\r\n    backgroundColor: props.backgroundColor,\r\n  };\r\n\r\n  return (\r\n    <button\r\n      type=\"submit\"\r\n      className={classes.Button}\r\n      style={outStyles}\r\n      onClick={props.clicked}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Form\":\"Form_Form__ZktGn\"};","import React, { useState } from \"react\";\r\nimport classes from \"./Form.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport Input from \"../Input/Input\";\r\nimport Button from \"../Button/Button\";\r\n\r\nconst Form = props => {\r\n  const [form, setForm] = useState({ ...props.form });\r\n\r\n  // > Recording the value of the input while user typing\r\n  const inputChangedHandler = (e, inputIdentifier) => {\r\n    // ^ Copying the form and mutate it\r\n    const updatedForm = {\r\n      ...form,\r\n      [inputIdentifier]: {\r\n        ...form[inputIdentifier],\r\n        value: e.target.value,\r\n      },\r\n    };\r\n\r\n    // ^ Finally, updating the state with the new value recorded\r\n    setForm(updatedForm);\r\n  };\r\n\r\n  // > Submit Handler (Returning the data from the form)\r\n  const submitForm = e => {\r\n    e.preventDefault();\r\n\r\n    // ^ Collecting the data of form items\r\n    const formItemsData = {};\r\n\r\n    for (const dataItem in form) {\r\n      if (form[dataItem].elementType === \"radioInput\") {\r\n        const checkedElementIndex = form[dataItem].elementConfig.findIndex(\r\n          config => config.checked\r\n        );\r\n        const checkedElementValue = form[dataItem].value[checkedElementIndex];\r\n\r\n        formItemsData[dataItem] = checkedElementValue;\r\n      } else {\r\n        formItemsData[dataItem] = form[dataItem].value;\r\n      }\r\n    }\r\n\r\n    // ^ Process the data collected as needed (in the component that contain the form)\r\n    props.dataProcessed(formItemsData);\r\n  };\r\n\r\n  // ^ Converting the form elements into an array to map them\r\n  let formElementsArr = [];\r\n  for (const key in form) {\r\n    formElementsArr.push({ id: key, config: form[key] });\r\n  }\r\n\r\n  return (\r\n    <form className={classes.Form} onSubmit={submitForm}>\r\n      {formElementsArr.map(element => {\r\n        return (\r\n          <Input\r\n            key={element.id}\r\n            elementType={element.config.elementType}\r\n            elementConfig={element.config.elementConfig}\r\n            name={element.id}\r\n            value={element.config.value}\r\n            changed={e => {\r\n              inputChangedHandler(e, element.id);\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n      <Button fontWeight=\"400\" fontSize=\"1.1rem\">\r\n        {props.buttonText}\r\n      </Button>\r\n      {props.children}\r\n    </form>\r\n  );\r\n};\r\n\r\nForm.propTypes = {\r\n  form: PropTypes.object.isRequired,\r\n  buttonText: PropTypes.string.isRequired,\r\n  dataProcessed: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Input\":\"Input_Input__vjpSZ\",\"SelectInput\":\"Input_SelectInput__rnzqj\",\"Textarea\":\"Input_Textarea__R5rtu\",\"FileInputContainer\":\"Input_FileInputContainer__hBKVf\",\"FileURLInput\":\"Input_FileURLInput__8VW7i\",\"FileInput\":\"Input_FileInput__EyR8R\",\"FileInputLabel\":\"Input_FileInputLabel__76CSO\",\"loaderContainer\":\"Input_loaderContainer__J3EUt\",\"RadioInputContainer\":\"Input_RadioInputContainer__4ICrx\",\"RadioInput\":\"Input_RadioInput__pkzl2\",\"RadioInputLabel\":\"Input_RadioInputLabel__VZaSW\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://amh-store.herokuapp.com/api/v1/upload/\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useState } from \"react\";\r\nimport classes from \"./Input.module.css\";\r\nimport Aux from \"../../../../hoc/Auxiliary/Auxiliary\";\r\nimport uploadAxios from \"../../../../axios/axios-upload\";\r\nimport Loader from \"../../../general/UI/Loader/Loader\";\r\n\r\nconst Input = props => {\r\n  let inputElement = null,\r\n    [loading, SetLoading] = useState(false),\r\n    [fileURL, setFileURL] = useState(\"\");\r\n\r\n  // > Handler for file input type\r\n  const uploadHandler = async e => {\r\n    try {\r\n      const formData = new FormData();\r\n\r\n      formData.append(\"image\", e.target.files[0]);\r\n\r\n      SetLoading(true);\r\n\r\n      // ^ Posting the file to the server endpoint\r\n      const response = await uploadAxios.post(\"\", formData);\r\n\r\n      // ^ Catching the image URL\r\n      const imageURL = response.data.path;\r\n      setFileURL(imageURL);\r\n      SetLoading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  switch (props.elementType) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={classes.Input}\r\n          {...props.elementConfig}\r\n          name={props.name}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n          required\r\n        />\r\n      );\r\n      break;\r\n\r\n    case \"fileInput\":\r\n      inputElement = (\r\n        <div className={classes.FileInputContainer}>\r\n          <input\r\n            className={classes.FileURLInput}\r\n            type=\"url\"\r\n            placeholder={props.elementConfig.placeholder}\r\n            name={props.name}\r\n            value={fileURL || props.value}\r\n            onChange={props.changed}\r\n            required\r\n          />\r\n          <input\r\n            className={classes.FileInput}\r\n            type={props.elementConfig.type}\r\n            accept={props.elementConfig.accept}\r\n            onChange={uploadHandler}\r\n            id={props.name}\r\n          />\r\n          <div className={classes.loaderContainer}>\r\n            {loading ? <Loader size=\"small\" /> : null}\r\n          </div>\r\n          <label className={classes.FileInputLabel} htmlFor={props.name}>\r\n            Upload\r\n          </label>\r\n        </div>\r\n      );\r\n      break;\r\n\r\n    case \"select\":\r\n      inputElement = (\r\n        <select\r\n          className={classes.SelectInput}\r\n          name={props.name}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        >\r\n          {props.elementConfig.options.map(opt => (\r\n            <option key={opt.value} value={opt.value}>\r\n              {opt.displayValue}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n\r\n    case \"radioInput\":\r\n      inputElement = (\r\n        <div className={classes.RadioInputContainer}>\r\n          {props.elementConfig.map((config, i) => {\r\n            return (\r\n              <Aux key={props.value[i]}>\r\n                <input\r\n                  className={classes.RadioInput}\r\n                  {...config}\r\n                  name={props.name[i]}\r\n                  value={props.value[i]}\r\n                  id={props.value[i]}\r\n                />\r\n                <label\r\n                  className={classes.RadioInputLabel}\r\n                  htmlFor={props.value[i]}\r\n                >\r\n                  {props.value[i]}\r\n                </label>\r\n              </Aux>\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n      break;\r\n\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={[classes.Input, classes.Textarea].join(\" \")}\r\n          {...props.elementConfig}\r\n          name={props.value}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n          required\r\n        ></textarea>\r\n      );\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return <Aux>{inputElement}</Aux>;\r\n};\r\n\r\nexport default Input;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"loaderContainer\":\"Loader_loaderContainer__pwLPQ\",\"loader\":\"Loader_loader__ZEPsn\",\"pie-fill\":\"Loader_pie-fill__mI6y7\"};","import React from \"react\";\r\nimport classes from \"./Loader.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Loader = props => {\r\n  const loaderContStyle =\r\n      props.size === \"small\"\r\n        ? {\r\n            width: \"40px\",\r\n            height: \"40px\",\r\n          }\r\n        : {\r\n            width: \"80px\",\r\n            height: \"80px\",\r\n          },\r\n    loaderStyle =\r\n      props.size === \"small\"\r\n        ? {\r\n            borderWidth: \"20px\",\r\n          }\r\n        : {\r\n            borderWidth: \"40px\",\r\n          };\r\n\r\n  return (\r\n    <div className={classes.loaderContainer} style={loaderContStyle}>\r\n      <span className={classes.loader} style={loaderStyle}></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoader.propTypes = {\r\n  size: PropTypes.string,\r\n};\r\n\r\nexport default Loader;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"SectionTitle\":\"SectionTitle_SectionTitle__k-YvA\"};","import React from 'react';\r\nimport classes from './SectionTitle.module.css';\r\n\r\nconst SectionTitle = props => {\r\n  return <h1 className={classes.SectionTitle}>{props.children}</h1>;\r\n}\r\n\r\nexport default SectionTitle;","// extracted by mini-css-extract-plugin\nexport default {\"ProfileShow\":\"ProfileShow_ProfileShow__HiRfK\",\"infoContainer\":\"ProfileShow_infoContainer__tqhUs\",\"username\":\"ProfileShow_username__0C7pF\",\"email\":\"ProfileShow_email__zf8or\"};","import React from 'react';\r\nimport classes from './ProfileShow.module.css';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\n\r\nimport Button from '../../general/UI/Button/Button';\r\nimport SectionTitle from '../../general/UI/SectionTitle/SectionTitle';\r\nimport Alert from '../../general/UI/Alert/Alert';\r\n\r\nconst ProfileShow = props => {\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <section className={classes.ProfileShow}>\r\n            <Alert>\r\n                <Link to='/myOrders'>Go to your orders ▶</Link>\r\n            </Alert>\r\n            <SectionTitle>Profile</SectionTitle>\r\n            <div className={classes.infoContainer}>\r\n                <h1 className={classes.username}>{props.userInfo.name}</h1>\r\n                <h4 className={classes.email}>{props.userInfo.email}</h4>\r\n                <Button\r\n                    fontSize='1.1rem'\r\n                    fontWeight='500'\r\n                    padding='10px 15px'\r\n                    clicked={() => navigate('/profile/edit')} >\r\n                    Edit Profile\r\n                </Button>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ProfileShow;","// extracted by mini-css-extract-plugin\nexport default {\"infoContainer\":\"ProfileEdit_infoContainer__WS0-Q\"};","import React, { useState } from 'react';\r\nimport classes from './ProfileEdit.module.css';\r\n\r\nimport SectionTitle from '../../general/UI/SectionTitle/SectionTitle';\r\nimport Form from '../../general/UI/Form/Form';\r\n\r\nconst ProfileEdit = props => {\r\n    const [profileEditForm] = useState({\r\n        name: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'New username',\r\n            },\r\n            value: props.userInfo.name,\r\n        },\r\n        email: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'email',\r\n                placeholder: 'New email',\r\n            },\r\n            value: props.userInfo.email,\r\n        },\r\n    });\r\n\r\n    const processData = profileData => {\r\n        props.editProfile(profileData);\r\n    }\r\n\r\n    return (\r\n        <section className={classes.ProfileEdit}>\r\n            <SectionTitle>Profile Editing</SectionTitle>\r\n            <div className={classes.infoContainer}>\r\n                <Form form={profileEditForm} buttonText='Update' dataProcessed={data => processData(data)} />\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ProfileEdit;","import React, { Component } from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from './store/actions/actionCreators';\r\nimport withRouter from '../../../hoc/withRouter/withRouter';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport ProfileShow from '../../../components/profile/ProfileShow/ProfileShow';\r\nimport ProfileEdit from '../../../components/profile/ProfileEdit/ProfileEdit';\r\nimport Loader from '../../../components/general/UI/Loader/Loader';\r\n\r\nclass Profile extends Component {\r\n    componentDidMount() {\r\n        this.props.onRenderUserInfo(this.props.token);\r\n    }\r\n\r\n    editProfile = newProfileData => {\r\n        this.props.onEditProfile(newProfileData, this.props.token);\r\n        this.props.navigate('/profile/show');\r\n    }\r\n\r\n    render() {\r\n        if (this.props.loading) return <Loader />;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Helmet>\r\n                  <title>Online Store | Profile</title>\r\n                </Helmet>\r\n\r\n                <Routes>\r\n                    <Route path='show' element={<ProfileShow\r\n                        userInfo={this.props.userInfo}\r\n                    />} />\r\n                    <Route path='edit' element={<ProfileEdit\r\n                        userInfo={this.props.userInfo}\r\n                        editProfile={this.editProfile}\r\n                    />} />\r\n                </Routes>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.register.token,\r\n        userInfo: state.profile.userInfo,\r\n        loading: state.profile.loading,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onRenderUserInfo: token => dispatch(actionCreators.fetchUserInfo(token)),\r\n        onEditProfile: (newProfileData, token) => dispatch(actionCreators.sendNewProfileData(newProfileData, token)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Profile));","import * as actionTypes from './actionTypes';\r\nimport usersAxios from '../../../../../axios/axios-users';\r\nimport ordersAxios from '../../../../../axios/axios-orders';\r\n\r\nconst load = () => {\r\n    return {\r\n        type: actionTypes.LOAD,\r\n    }\r\n}\r\n\r\nconst renderUserInfo = userInfo => {\r\n    return {\r\n        type: actionTypes.RENDER_USER_INFO,\r\n        userInfo,\r\n    }\r\n}\r\n\r\nconst renderMyOrders = myOrders => {\r\n    return {\r\n        type: actionTypes.RENDER_MY_ORDERS,\r\n        myOrders,\r\n    }\r\n}\r\n\r\nconst fetchUserInfo = token => {\r\n    return dispatch => {\r\n        (async () => {\r\n            dispatch(load());\r\n\r\n            const response = await usersAxios.get('/me', {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            }),\r\n                userInfo = response.data.user;\r\n\r\n            dispatch(renderUserInfo(userInfo));\r\n        })();\r\n    }\r\n}\r\n\r\nconst sendNewProfileData = (newProfileData, token) => {\r\n    return dispatch => {\r\n        (async () => {\r\n            dispatch(load());\r\n\r\n            const response = await usersAxios.put('/updateMe', newProfileData, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            }),\r\n                userInfo = response.data.data;\r\n\r\n            dispatch(renderUserInfo(userInfo));\r\n        })();\r\n    }\r\n}\r\n\r\nconst fetchMyOrders = token => {\r\n    return dispatch => {\r\n        (async () => {\r\n            dispatch(load());\r\n\r\n            const response = await ordersAxios.get('/myOrders', {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            }),\r\n                myOrders = response.data.data;\r\n\r\n            dispatch(renderMyOrders(myOrders));\r\n        })();\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchUserInfo,\r\n    sendNewProfileData,\r\n    fetchMyOrders,\r\n}","import React from \"react\";\r\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nconst withRouter = Component => {\r\n  return props => (\r\n    <Component\r\n      {...props}\r\n      params={useParams()}\r\n      navigate={useNavigate()}\r\n      location={useLocation()}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter;\r\n"],"names":["instance","axios","baseURL","props","className","classes","children","outStyles","fontWeight","padding","fontSize","backgroundColor","type","style","onClick","clicked","useState","form","setForm","formElementsArr","key","push","id","config","onSubmit","e","preventDefault","formItemsData","dataItem","elementType","checkedElementIndex","elementConfig","findIndex","checked","checkedElementValue","value","dataProcessed","map","element","Input","name","changed","inputIdentifier","updatedForm","target","inputChangedHandler","Button","buttonText","inputElement","loading","SetLoading","fileURL","setFileURL","uploadHandler","formData","FormData","append","files","uploadAxios","response","imageURL","data","path","console","log","onChange","required","placeholder","accept","Loader","size","htmlFor","options","opt","displayValue","i","join","loaderContStyle","width","height","loaderStyle","borderWidth","navigate","useNavigate","Alert","to","SectionTitle","userInfo","email","profileEditForm","Form","profileData","editProfile","Profile","newProfileData","onEditProfile","token","this","onRenderUserInfo","Helmet","Component","connect","state","register","profile","dispatch","actionCreators","withRouter","load","actionTypes","renderUserInfo","renderMyOrders","myOrders","fetchUserInfo","usersAxios","headers","Authorization","user","sendNewProfileData","fetchMyOrders","ordersAxios","params","useParams","location","useLocation"],"sourceRoot":""}