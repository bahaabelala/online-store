{"version":3,"file":"static/js/336.a2b98f8b.chunk.js","mappings":"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","sources":["axios/axios-products.js","webpack://online-store/./src/components/general/UI/Alert/Alert.module.css?c9f1","components/general/UI/Alert/Alert.js","webpack://online-store/./src/components/general/UI/Button/Button.module.css?6c05","components/general/UI/Button/Button.js","webpack://online-store/./src/components/general/UI/Input/Input.module.css?a495","axios/axios-upload.js","components/general/UI/Input/Input.js","webpack://online-store/./src/components/general/UI/Loader/Loader.module.css?ddc0","components/general/UI/Loader/Loader.js","webpack://online-store/./src/components/general/UI/SectionTitle/SectionTitle.module.css?6e39","components/general/UI/SectionTitle/SectionTitle.js","webpack://online-store/./src/containers/Layout/Cart/Cart.module.css?8827","webpack://online-store/./src/components/cart/CartItem/CartItem.module.css?27ab","components/cart/CartItem/CartItem.js","containers/Layout/Cart/Cart.js","containers/Layout/Cart/store/actions/actionCreators.js","hoc/withRouter/withRouter.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://amh-store.herokuapp.com/api/v1/products\",\r\n});\r\n\r\nexport default instance;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Alert\":\"Alert_Alert__IpMo7\"};","import React from \"react\";\r\nimport classes from \"./Alert.module.css\";\r\n\r\nconst Alert = props => {\r\n  return <div className={classes.Alert}>{props.children}</div>;\r\n};\r\n\r\nexport default Alert;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"Button_Button__Ip4AH\"};","import React from \"react\";\r\nimport classes from \"./Button.module.css\";\r\n\r\nconst Button = props => {\r\n  const outStyles = {\r\n    fontWeight: props.fontWeight,\r\n    padding: props.padding,\r\n    fontSize: props.fontSize,\r\n    backgroundColor: props.backgroundColor,\r\n  };\r\n\r\n  return (\r\n    <button\r\n      type=\"submit\"\r\n      className={classes.Button}\r\n      style={outStyles}\r\n      onClick={props.clicked}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Input\":\"Input_Input__vjpSZ\",\"SelectInput\":\"Input_SelectInput__rnzqj\",\"Textarea\":\"Input_Textarea__R5rtu\",\"FileInputContainer\":\"Input_FileInputContainer__hBKVf\",\"FileURLInput\":\"Input_FileURLInput__8VW7i\",\"FileInput\":\"Input_FileInput__EyR8R\",\"FileInputLabel\":\"Input_FileInputLabel__76CSO\",\"loaderContainer\":\"Input_loaderContainer__J3EUt\",\"RadioInputContainer\":\"Input_RadioInputContainer__4ICrx\",\"RadioInput\":\"Input_RadioInput__pkzl2\",\"RadioInputLabel\":\"Input_RadioInputLabel__VZaSW\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://amh-store.herokuapp.com/api/v1/upload/\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useState } from \"react\";\r\nimport classes from \"./Input.module.css\";\r\nimport Aux from \"../../../../hoc/Auxiliary/Auxiliary\";\r\nimport uploadAxios from \"../../../../axios/axios-upload\";\r\nimport Loader from \"../../../general/UI/Loader/Loader\";\r\n\r\nconst Input = props => {\r\n  let inputElement = null,\r\n    [loading, SetLoading] = useState(false),\r\n    [fileURL, setFileURL] = useState(\"\");\r\n\r\n  // > Handler for file input type\r\n  const uploadHandler = async e => {\r\n    try {\r\n      const formData = new FormData();\r\n\r\n      formData.append(\"image\", e.target.files[0]);\r\n\r\n      SetLoading(true);\r\n\r\n      // ^ Posting the file to the server endpoint\r\n      const response = await uploadAxios.post(\"\", formData);\r\n\r\n      // ^ Catching the image URL\r\n      const imageURL = response.data.path;\r\n      setFileURL(imageURL);\r\n      SetLoading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  switch (props.elementType) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={classes.Input}\r\n          {...props.elementConfig}\r\n          name={props.name}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n          required\r\n        />\r\n      );\r\n      break;\r\n\r\n    case \"fileInput\":\r\n      inputElement = (\r\n        <div className={classes.FileInputContainer}>\r\n          <input\r\n            className={classes.FileURLInput}\r\n            type=\"url\"\r\n            placeholder={props.elementConfig.placeholder}\r\n            name={props.name}\r\n            value={fileURL || props.value}\r\n            onChange={props.changed}\r\n            required\r\n          />\r\n          <input\r\n            className={classes.FileInput}\r\n            type={props.elementConfig.type}\r\n            accept={props.elementConfig.accept}\r\n            onChange={uploadHandler}\r\n            id={props.name}\r\n          />\r\n          <div className={classes.loaderContainer}>\r\n            {loading ? <Loader size=\"small\" /> : null}\r\n          </div>\r\n          <label className={classes.FileInputLabel} htmlFor={props.name}>\r\n            Upload\r\n          </label>\r\n        </div>\r\n      );\r\n      break;\r\n\r\n    case \"select\":\r\n      inputElement = (\r\n        <select\r\n          className={classes.SelectInput}\r\n          name={props.name}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        >\r\n          {props.elementConfig.options.map(opt => (\r\n            <option key={opt.value} value={opt.value}>\r\n              {opt.displayValue}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n\r\n    case \"radioInput\":\r\n      inputElement = (\r\n        <div className={classes.RadioInputContainer}>\r\n          {props.elementConfig.map((config, i) => {\r\n            return (\r\n              <Aux key={props.value[i]}>\r\n                <input\r\n                  className={classes.RadioInput}\r\n                  {...config}\r\n                  name={props.name[i]}\r\n                  value={props.value[i]}\r\n                  id={props.value[i]}\r\n                />\r\n                <label\r\n                  className={classes.RadioInputLabel}\r\n                  htmlFor={props.value[i]}\r\n                >\r\n                  {props.value[i]}\r\n                </label>\r\n              </Aux>\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n      break;\r\n\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={[classes.Input, classes.Textarea].join(\" \")}\r\n          {...props.elementConfig}\r\n          name={props.value}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n          required\r\n        ></textarea>\r\n      );\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return <Aux>{inputElement}</Aux>;\r\n};\r\n\r\nexport default Input;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"loaderContainer\":\"Loader_loaderContainer__pwLPQ\",\"loader\":\"Loader_loader__ZEPsn\",\"pie-fill\":\"Loader_pie-fill__mI6y7\"};","import React from \"react\";\r\nimport classes from \"./Loader.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Loader = props => {\r\n  const loaderContStyle =\r\n      props.size === \"small\"\r\n        ? {\r\n            width: \"40px\",\r\n            height: \"40px\",\r\n          }\r\n        : {\r\n            width: \"80px\",\r\n            height: \"80px\",\r\n          },\r\n    loaderStyle =\r\n      props.size === \"small\"\r\n        ? {\r\n            borderWidth: \"20px\",\r\n          }\r\n        : {\r\n            borderWidth: \"40px\",\r\n          };\r\n\r\n  return (\r\n    <div className={classes.loaderContainer} style={loaderContStyle}>\r\n      <span className={classes.loader} style={loaderStyle}></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoader.propTypes = {\r\n  size: PropTypes.string,\r\n};\r\n\r\nexport default Loader;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"SectionTitle\":\"SectionTitle_SectionTitle__k-YvA\"};","import React from 'react';\r\nimport classes from './SectionTitle.module.css';\r\n\r\nconst SectionTitle = props => {\r\n  return <h1 className={classes.SectionTitle}>{props.children}</h1>;\r\n}\r\n\r\nexport default SectionTitle;","// extracted by mini-css-extract-plugin\nexport default {\"Cart\":\"Cart_Cart__Pqaky\",\"table\":\"Cart_table__ipxFu\",\"tableHead\":\"Cart_tableHead__9B+f0\",\"tableBody\":\"Cart_tableBody__nyD6P\",\"actionCell\":\"Cart_actionCell__JRr8s\",\"decisionButtons\":\"Cart_decisionButtons__SK3Zo\"};","// extracted by mini-css-extract-plugin\nexport default {\"deleteIconContainer\":\"CartItem_deleteIconContainer__-wEC0\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './CartItem.module.css';\n\nimport { Card, ListGroup, Col } from 'react-bootstrap';\nimport Input from '../../general/UI/Input/Input';\nimport { Link } from 'react-router-dom';\n\nimport controllerImage from '../../../assets/images/Controller.jpg';\n\nconst CartItem = props => {\n  return (\n    <Col xs={12} sm={6} lg={4} xl={3}>\n      <Card style={{ width: '100%', height: '100%' }}>\n        <Card.Img variant=\"top\" src={controllerImage} alt='Controller' />\n        <Card.Body>\n          <Card.Title>\n            <Link to={`/product/${props.item.id}`} style={{ textDecoration: 'none' }}>{props.item.name}</Link>\n          </Card.Title>\n        </Card.Body>\n        <ListGroup className=\"list-group-flush\">\n          <ListGroup.Item>\n            <span className='fw-bold'>Price:</span>&nbsp;&nbsp;\n            ${props.item.price.toFixed(2)}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <span className='fw-bold'>Quantity:</span>&nbsp;&nbsp;&nbsp;\n            <Input\n              elementType={props.item.quantity.elementType}\n              elementConfig={props.item.quantity.elementConfig}\n              name={props.item.quantity.value}\n              value={props.item.quantity.value}\n              changed={e => {\n                props.updateProdQuantity(e, props.item);\n              }}\n            />\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <span className='fw-bold'>Total price:</span>&nbsp;&nbsp;\n            ${(parseFloat(props.item.quantity.value) * props.item.price).toFixed(2)}\n          </ListGroup.Item>\n        </ListGroup>\n        <Card.Body\n          className={['text-center bg-danger', classes.deleteIconContainer].join(' ')}\n          onClick={() => {\n            props.removeItem(props.item.id);\n          }}\n        >\n          <Card.Link style={{ textDecoration: 'none' }}>\n            <i className=\"ri-delete-bin-line h3 text-white\" title='Remove item'></i>\n          </Card.Link>\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n}\n\nCartItem.propTypes = {\n  item: PropTypes.object.isRequired,\n  removeItem: PropTypes.func.isRequired\n};\n\nexport default CartItem;","import React, { Component } from \"react\";\r\nimport classes from \"./Cart.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionCreators from \"./store/actions/actionCreators\";\r\nimport { changeAuthRedirectPath } from \"../Register/store/actions/actionCreators\";\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport SectionTitle from \"../../../components/general/UI/SectionTitle/SectionTitle\";\r\nimport Button from \"../../../components/general/UI/Button/Button\";\r\nimport withRouter from \"../../../hoc/withRouter/withRouter\";\r\nimport Loader from \"../../../components/general/UI/Loader/Loader\";\r\nimport Alert from \"../../../components/general/UI/Alert/Alert\";\r\nimport CartItem from '../../../components/cart/CartItem/CartItem';\r\nimport { Row } from 'react-bootstrap';\r\n\r\nclass Cart extends Component {\r\n  componentDidMount() {\r\n    // ^ Checking if there is an id given in the url parameters\r\n    if (this.props.params.id) {\r\n      const productID = this.props.params.id.split(\".\")[0],\r\n        productQuantity = this.props.params.id.split(\".\")[1];\r\n\r\n      // ^ Fetching the new product if its ID is given\r\n      this.props.onFetchCurrentProduct(productID, productQuantity);\r\n    } else {\r\n      // ^ Rendering the cart products\r\n      this.props.onRenderCartProducts();\r\n    }\r\n  }\r\n\r\n  // > Continue to shop the cart products\r\n  continueShoppingHandler = () => {\r\n    // ^ Redirecting to checkout IF AUTHENTICATED\r\n    if (this.props.isAuthenticated) {\r\n      this.props.navigate(\"/checkout/shipping\");\r\n\r\n      // ^ Redirecting to sign-in page IF NOT AUTHENTICATED\r\n    } else {\r\n      this.props.onSetOrderingState();\r\n      this.props.onChangeAuthRedirectPath('/checkout/shipping');\r\n      this.props.navigate('/register/signin');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let cartItemsJSX = null,\r\n        decisionButtons = null;\r\n\r\n    // ^ Rendering the JSX conditionally\r\n    if (this.props.loading) {\r\n      cartItemsJSX = <Loader />;\r\n    } else if (this.props.products.length) {\r\n      cartItemsJSX = this.props.products.map(product => (\r\n        <CartItem\r\n          key={product.id}\r\n          item={product}\r\n          removeItem={this.props.onRemoveProduct}\r\n          updateProdQuantity={this.props.onUpdateProdQuantity}\r\n          />\r\n      ));\r\n\r\n      decisionButtons = (\r\n        <div className={classes.decisionButtons}>\r\n          <Button fontWeight=\"400\" clicked={this.continueShoppingHandler}>\r\n            CONTINUE SHOPPING\r\n          </Button>\r\n\r\n          <Button\r\n            fontWeight=\"400\"\r\n            backgroundColor=\"var(--red)\"\r\n            clicked={this.props.onClearCart}\r\n          >\r\n            CLEAR SHOPPING LIST\r\n          </Button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <section className={classes.Cart}>\r\n        <Helmet>\r\n          <title>Online Store | Cart</title>\r\n        </Helmet>\r\n        <SectionTitle>Your cart items</SectionTitle>\r\n        {\r\n          !this.props.products.length && !this.props.loading\r\n          ? (\r\n              <Alert>\r\n                Your cart is empty!&nbsp;\r\n                <Link to=\"/\">Let's fill it</Link>\r\n              </Alert>\r\n            )\r\n          : null\r\n        }\r\n        <Row xs={1} sm={2} lg={3} xl={4} className='g-3'>\r\n          {cartItemsJSX}\r\n        </Row>\r\n        {decisionButtons}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.cart.products,\r\n    loading: state.cart.loading,\r\n    isAuthenticated: state.register.token !== null,\r\n    isOrdering: state.cart.ordering,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchCurrentProduct: (id, quantity) =>\r\n      dispatch(actionCreators.fetchCurrentProduct(id, quantity)),\r\n    onRenderCartProducts: () =>\r\n      dispatch(actionCreators.renderCartProducts()),\r\n    onClearCart: () => dispatch(actionCreators.clearCart()),\r\n    onRemoveProduct: id => dispatch(actionCreators.removeProduct(id)),\r\n    onUpdateProdQuantity: (event, product) =>\r\n      dispatch(actionCreators.updateProductQuantity(event, product)),\r\n    onSetOrderingState: () =>\r\n      dispatch(actionCreators.setOrderingState()),\r\n    onChangeAuthRedirectPath: path =>\r\n      dispatch(changeAuthRedirectPath(path)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Cart));\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../../../../axios/axios-products\";\r\n\r\n// > Loading (rendering slider component) action\r\nconst load = () => {\r\n  return {\r\n    type: actionTypes.LOAD,\r\n  };\r\n};\r\n\r\n// > Rendering cart products\r\nexport const renderCartProducts = () => {\r\n  return {\r\n    type: actionTypes.RENDER_CART_PRODUCTS,\r\n  };\r\n};\r\n\r\nconst storeCurrentProduct = (product, quantity) => {\r\n  return {\r\n    type: actionTypes.STORE_CURRENT_PRODUCT,\r\n    product,\r\n    quantity,\r\n  }\r\n}\r\n\r\nexport const fetchCurrentProduct = (productID, productQuantity) => {\r\n  return dispatch => {\r\n    \r\n    // ^ Fetching the current product from the server with its id\r\n    (async () => {\r\n      try {\r\n        dispatch(load());\r\n\r\n        const response = await axios.get(`/${productID}`),\r\n          currentProduct = response.data.data;\r\n\r\n        // ^ Setting the state with the new added product\r\n        dispatch(storeCurrentProduct(currentProduct, productQuantity));\r\n\r\n        // ^ Rendering cart products with the new product\r\n        dispatch(renderCartProducts());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n    \r\n  };\r\n};\r\n\r\n// > clear all cart products ACTION\r\nexport const clearCart = () => {\r\n  return {\r\n    type: actionTypes.CLEAR_CART,\r\n  };\r\n};\r\n\r\n// > Remove one chosen product ACTION\r\nexport const removeProduct = productID => {\r\n  return {\r\n    type: actionTypes.REMOVE_PRODUCT,\r\n    productID,\r\n  };\r\n};\r\n\r\n// > Update quantity of a chosen product ACTION\r\nexport const updateProductQuantity = (event, targetProduct) => {\r\n  return {\r\n    type: actionTypes.UPDATE_PRODUCT_QUANTITY,\r\n    targetProduct,\r\n    event,\r\n  };\r\n};\r\n\r\n// > Changing ordering state to ordering\r\nexport const setOrderingState = () => {\r\n  return {\r\n    type: actionTypes.SET_ORDERING_STATE,\r\n  }\r\n}\r\n\r\n// > Changing ordering state to NOT ordering\r\nexport const unsetOrderingState = () => {\r\n  return {\r\n    type: actionTypes.UNSET_ORDERING_STATE,\r\n  }\r\n}","import React from \"react\";\r\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nconst withRouter = Component => {\r\n  return props => (\r\n    <Component\r\n      {...props}\r\n      params={useParams()}\r\n      navigate={useNavigate()}\r\n      location={useLocation()}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter;\r\n"],"names":["instance","axios","baseURL","props","className","classes","children","outStyles","fontWeight","padding","fontSize","backgroundColor","type","style","onClick","clicked","inputElement","useState","loading","SetLoading","fileURL","setFileURL","uploadHandler","e","formData","FormData","append","target","files","uploadAxios","response","imageURL","data","path","console","log","elementType","elementConfig","name","value","onChange","changed","required","placeholder","accept","id","Loader","size","htmlFor","options","map","opt","displayValue","config","i","join","loaderContStyle","width","height","loaderStyle","borderWidth","Col","xs","sm","lg","xl","Card","variant","src","controllerImage","alt","to","item","textDecoration","ListGroup","price","toFixed","Input","quantity","updateProdQuantity","parseFloat","removeItem","title","Cart","continueShoppingHandler","isAuthenticated","navigate","onSetOrderingState","onChangeAuthRedirectPath","this","params","productID","split","productQuantity","onFetchCurrentProduct","onRenderCartProducts","cartItemsJSX","decisionButtons","products","length","product","onRemoveProduct","onUpdateProdQuantity","Button","onClearCart","Helmet","SectionTitle","Alert","Row","Component","connect","state","cart","register","token","isOrdering","ordering","dispatch","actionCreators","event","changeAuthRedirectPath","withRouter","renderCartProducts","actionTypes","fetchCurrentProduct","currentProduct","clearCart","removeProduct","updateProductQuantity","targetProduct","setOrderingState","unsetOrderingState","useParams","useNavigate","location","useLocation"],"sourceRoot":""}