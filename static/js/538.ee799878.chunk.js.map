{"version":3,"file":"static/js/538.ee799878.chunk.js","mappings":"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","sources":["axios/axios-orders.js","axios/axios-products.js","webpack://online-store/./src/components/general/UI/Button/Button.module.css?6c05","components/general/UI/Button/Button.js","webpack://online-store/./src/components/general/UI/Form/Form.module.css?138a","components/general/UI/Form/Form.js","webpack://online-store/./src/components/general/UI/Input/Input.module.css?a495","axios/axios-upload.js","components/general/UI/Input/Input.js","webpack://online-store/./src/components/general/UI/Loader/Loader.module.css?ddc0","components/general/UI/Loader/Loader.js","webpack://online-store/./src/components/general/UI/SectionTitle/SectionTitle.module.css?6e39","components/general/UI/SectionTitle/SectionTitle.js","components/admin/adminHome/AdminProductDetailsForm/AdminProductDetailsForm.js","containers/Layout/Admin/AdminProductDetails/AdminProductDetails.js","containers/Layout/Admin/store/actions/actionCreators.js","hoc/withRouter/withRouter.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://amh-store.herokuapp.com/api/v1/orders',\r\n});\r\n\r\nexport default instance; ","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://amh-store.herokuapp.com/api/v1/products\",\r\n});\r\n\r\nexport default instance;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"Button_Button__Ip4AH\"};","import React from \"react\";\r\nimport classes from \"./Button.module.css\";\r\n\r\nconst Button = props => {\r\n  const outStyles = {\r\n    fontWeight: props.fontWeight,\r\n    padding: props.padding,\r\n    fontSize: props.fontSize,\r\n    backgroundColor: props.backgroundColor,\r\n  };\r\n\r\n  return (\r\n    <button\r\n      type=\"submit\"\r\n      className={classes.Button}\r\n      style={outStyles}\r\n      onClick={props.clicked}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Form\":\"Form_Form__ZktGn\"};","import React, { useState } from \"react\";\r\nimport classes from \"./Form.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport Input from \"../Input/Input\";\r\nimport Button from \"../Button/Button\";\r\n\r\nconst Form = props => {\r\n  const [form, setForm] = useState({ ...props.form });\r\n\r\n  // > Recording the value of the input while user typing\r\n  const inputChangedHandler = (e, inputIdentifier) => {\r\n    // ^ Copying the form and mutate it\r\n    const updatedForm = {\r\n      ...form,\r\n      [inputIdentifier]: {\r\n        ...form[inputIdentifier],\r\n        value: e.target.value,\r\n      },\r\n    };\r\n\r\n    // ^ Finally, updating the state with the new value recorded\r\n    setForm(updatedForm);\r\n  };\r\n\r\n  // > Submit Handler (Returning the data from the form)\r\n  const submitForm = e => {\r\n    e.preventDefault();\r\n\r\n    // ^ Collecting the data of form items\r\n    const formItemsData = {};\r\n\r\n    for (const dataItem in form) {\r\n      if (form[dataItem].elementType === \"radioInput\") {\r\n        const checkedElementIndex = form[dataItem].elementConfig.findIndex(\r\n          config => config.checked\r\n        );\r\n        const checkedElementValue = form[dataItem].value[checkedElementIndex];\r\n\r\n        formItemsData[dataItem] = checkedElementValue;\r\n      } else {\r\n        formItemsData[dataItem] = form[dataItem].value;\r\n      }\r\n    }\r\n\r\n    // ^ Process the data collected as needed (in the component that contain the form)\r\n    props.dataProcessed(formItemsData);\r\n  };\r\n\r\n  // ^ Converting the form elements into an array to map them\r\n  let formElementsArr = [];\r\n  for (const key in form) {\r\n    formElementsArr.push({ id: key, config: form[key] });\r\n  }\r\n\r\n  return (\r\n    <form className={classes.Form} onSubmit={submitForm}>\r\n      {formElementsArr.map(element => {\r\n        return (\r\n          <Input\r\n            key={element.id}\r\n            elementType={element.config.elementType}\r\n            elementConfig={element.config.elementConfig}\r\n            name={element.id}\r\n            value={element.config.value}\r\n            changed={e => {\r\n              inputChangedHandler(e, element.id);\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n      <Button fontWeight=\"400\" fontSize=\"1.1rem\">\r\n        {props.buttonText}\r\n      </Button>\r\n      {props.children}\r\n    </form>\r\n  );\r\n};\r\n\r\nForm.propTypes = {\r\n  form: PropTypes.object.isRequired,\r\n  buttonText: PropTypes.string.isRequired,\r\n  dataProcessed: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Input\":\"Input_Input__vjpSZ\",\"SelectInput\":\"Input_SelectInput__rnzqj\",\"Textarea\":\"Input_Textarea__R5rtu\",\"FileInputContainer\":\"Input_FileInputContainer__hBKVf\",\"FileURLInput\":\"Input_FileURLInput__8VW7i\",\"FileInput\":\"Input_FileInput__EyR8R\",\"FileInputLabel\":\"Input_FileInputLabel__76CSO\",\"loaderContainer\":\"Input_loaderContainer__J3EUt\",\"RadioInputContainer\":\"Input_RadioInputContainer__4ICrx\",\"RadioInput\":\"Input_RadioInput__pkzl2\",\"RadioInputLabel\":\"Input_RadioInputLabel__VZaSW\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://amh-store.herokuapp.com/api/v1/upload/\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useState } from \"react\";\r\nimport classes from \"./Input.module.css\";\r\nimport Aux from \"../../../../hoc/Auxiliary/Auxiliary\";\r\nimport uploadAxios from \"../../../../axios/axios-upload\";\r\nimport Loader from \"../../../general/UI/Loader/Loader\";\r\n\r\nconst Input = props => {\r\n  let inputElement = null,\r\n    [loading, SetLoading] = useState(false),\r\n    [fileURL, setFileURL] = useState(\"\");\r\n\r\n  // > Handler for file input type\r\n  const uploadHandler = async e => {\r\n    try {\r\n      const formData = new FormData();\r\n\r\n      formData.append(\"image\", e.target.files[0]);\r\n\r\n      SetLoading(true);\r\n\r\n      // ^ Posting the file to the server endpoint\r\n      const response = await uploadAxios.post(\"\", formData);\r\n\r\n      // ^ Catching the image URL\r\n      const imageURL = response.data.path;\r\n      setFileURL(imageURL);\r\n      SetLoading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  switch (props.elementType) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={classes.Input}\r\n          {...props.elementConfig}\r\n          name={props.name}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n          required\r\n        />\r\n      );\r\n      break;\r\n\r\n    case \"fileInput\":\r\n      inputElement = (\r\n        <div className={classes.FileInputContainer}>\r\n          <input\r\n            className={classes.FileURLInput}\r\n            type=\"url\"\r\n            placeholder={props.elementConfig.placeholder}\r\n            name={props.name}\r\n            value={fileURL || props.value}\r\n            onChange={props.changed}\r\n            required\r\n          />\r\n          <input\r\n            className={classes.FileInput}\r\n            type={props.elementConfig.type}\r\n            accept={props.elementConfig.accept}\r\n            onChange={uploadHandler}\r\n            id={props.name}\r\n          />\r\n          <div className={classes.loaderContainer}>\r\n            {loading ? <Loader size=\"small\" /> : null}\r\n          </div>\r\n          <label className={classes.FileInputLabel} htmlFor={props.name}>\r\n            Upload\r\n          </label>\r\n        </div>\r\n      );\r\n      break;\r\n\r\n    case \"select\":\r\n      inputElement = (\r\n        <select\r\n          className={classes.SelectInput}\r\n          name={props.name}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        >\r\n          {props.elementConfig.options.map(opt => (\r\n            <option key={opt.value} value={opt.value}>\r\n              {opt.displayValue}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n\r\n    case \"radioInput\":\r\n      inputElement = (\r\n        <div className={classes.RadioInputContainer}>\r\n          {props.elementConfig.map((config, i) => {\r\n            return (\r\n              <Aux key={props.value[i]}>\r\n                <input\r\n                  className={classes.RadioInput}\r\n                  {...config}\r\n                  name={props.name[i]}\r\n                  value={props.value[i]}\r\n                  id={props.value[i]}\r\n                />\r\n                <label\r\n                  className={classes.RadioInputLabel}\r\n                  htmlFor={props.value[i]}\r\n                >\r\n                  {props.value[i]}\r\n                </label>\r\n              </Aux>\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n      break;\r\n\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={[classes.Input, classes.Textarea].join(\" \")}\r\n          {...props.elementConfig}\r\n          name={props.value}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n          required\r\n        ></textarea>\r\n      );\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return <Aux>{inputElement}</Aux>;\r\n};\r\n\r\nexport default Input;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"loaderContainer\":\"Loader_loaderContainer__pwLPQ\",\"loader\":\"Loader_loader__ZEPsn\",\"pie-fill\":\"Loader_pie-fill__mI6y7\"};","import React from \"react\";\r\nimport classes from \"./Loader.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Loader = props => {\r\n  const loaderContStyle =\r\n      props.size === \"small\"\r\n        ? {\r\n            width: \"40px\",\r\n            height: \"40px\",\r\n          }\r\n        : {\r\n            width: \"80px\",\r\n            height: \"80px\",\r\n          },\r\n    loaderStyle =\r\n      props.size === \"small\"\r\n        ? {\r\n            borderWidth: \"20px\",\r\n          }\r\n        : {\r\n            borderWidth: \"40px\",\r\n          };\r\n\r\n  return (\r\n    <div className={classes.loaderContainer} style={loaderContStyle}>\r\n      <span className={classes.loader} style={loaderStyle}></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoader.propTypes = {\r\n  size: PropTypes.string,\r\n};\r\n\r\nexport default Loader;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"SectionTitle\":\"SectionTitle_SectionTitle__k-YvA\"};","import React from 'react';\r\nimport classes from './SectionTitle.module.css';\r\n\r\nconst SectionTitle = props => {\r\n  return <h1 className={classes.SectionTitle}>{props.children}</h1>;\r\n}\r\n\r\nexport default SectionTitle;","import React, { useState } from 'react';\r\n\r\nimport Form from '../../../general/UI/Form/Form';\r\n\r\nconst AdminProductDetailsForm = props => {\r\n    const [productDetailsForm] = useState({\r\n            name: {\r\n                elementType: \"input\",\r\n                elementConfig: {\r\n                    type: \"text\",\r\n                    placeholder: \"Type product name\",\r\n                },\r\n                value: props.action === 'edit' ? props.productDetails.name : '',\r\n            },\r\n            price: {\r\n                elementType: \"input\",\r\n                elementConfig: {\r\n                    type: \"number\",\r\n                    placeholder: \"Type product price\",\r\n                    min: \"1\",\r\n                },\r\n                value: props.action === 'edit' ? props.productDetails.price : '',\r\n            },\r\n            image: {\r\n                elementType: \"fileInput\",\r\n                elementConfig: {\r\n                    type: \"file\",\r\n                    accept: \"image/*\",\r\n                    placeholder: \"Upload product image\",\r\n                },\r\n                value: props.action === 'edit' ? props.productDetails.image : '',\r\n            },\r\n            brand: {\r\n                elementType: \"input\",\r\n                elementConfig: {\r\n                    type: \"text\",\r\n                    placeholder: \"Type product brand\",\r\n                },\r\n                value: props.action === 'edit' ? props.productDetails.brand : '',\r\n            },\r\n            category: {\r\n                elementType: \"input\",\r\n                elementConfig: {\r\n                    type: \"text\",\r\n                    placeholder: \"Type product category\",\r\n                },\r\n                value: props.action === 'edit' ? props.productDetails.category : '',\r\n            },\r\n            countInStock: {\r\n                elementType: \"input\",\r\n                elementConfig: {\r\n                    type: \"number\",\r\n                    placeholder: \"Type product count in stock\",\r\n                    min: \"1\",\r\n                },\r\n                value: props.action === 'edit' ? props.productDetails.countInStock : '',\r\n            },\r\n            description: {\r\n                elementType: \"textarea\",\r\n                elementConfig: {\r\n                    placeholder: \"Type product description\",\r\n                },\r\n                value: props.action === 'edit' ? props.productDetails.description : '',\r\n            },\r\n        })\r\n\r\n    \r\n    return (\r\n        <Form\r\n            form={productDetailsForm}\r\n            buttonText={props.config.buttonText}\r\n            dataProcessed={props.config.process}\r\n        />\r\n    )\r\n}\r\n\r\nexport default AdminProductDetailsForm;","import React, { Component } from \"react\";\r\nimport withRouter from \"../../../../hoc/withRouter/withRouter\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../store/actions/actionCreators';\r\n\r\nimport SectionTitle from \"../../../../components/general/UI/SectionTitle/SectionTitle\";\r\nimport Loader from \"../../../../components/general/UI/Loader/Loader\";\r\nimport Aux from \"../../../../hoc/Auxiliary/Auxiliary\";\r\nimport AdminProductDetailsForm from \"../../../../components/admin/adminHome/AdminProductDetailsForm/AdminProductDetailsForm\";\r\n\r\nclass AdminProductDetails extends Component {\r\n  componentDidMount() {\r\n    if (this.props.action === \"edit\") {\r\n      this.props.onRenderProductDetails(this.props.params.id);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const config =\r\n      this.props.action === \"add\"\r\n        ? {\r\n          sectionTitle: \"Add Product\",\r\n          buttonText: \"ADD\",\r\n          process: (productData) => {\r\n            this.props.onAddProduct(productData, this.props.token, this.props.userID)\r\n          },\r\n        }\r\n        : {\r\n          sectionTitle: \"Update Product\",\r\n          buttonText: \"UPDATE\",\r\n          process: (productData) => {\r\n            this.props.onUpdateProduct(\r\n              productData,\r\n              this.props.token,\r\n              this.props.params.id\r\n            );\r\n          },\r\n        };\r\n        \r\n    if (this.props.loading) {\r\n      return <Loader />\r\n    }\r\n\r\n    if (this.props.isProductEdited) {\r\n      alert('Updated successfully!');\r\n      this.props.navigate(-1);\r\n    }\r\n\r\n    if (this.props.isProductAdded) {\r\n      alert('Added successfully!');\r\n      this.props.navigate(-1);\r\n    }\r\n\r\n    if (this.props.action === 'edit' && this.props.productDetails) {\r\n      return (\r\n        <Aux>\r\n          <SectionTitle>{config.sectionTitle}</SectionTitle>\r\n          <AdminProductDetailsForm\r\n            action='edit'\r\n            config={config}\r\n            productDetails={this.props.productDetails} />\r\n        </Aux>\r\n      );\r\n    } \r\n\r\n    if (this.props.action === 'add') {\r\n      return (\r\n        <Aux>\r\n          <SectionTitle>{config.sectionTitle}</SectionTitle>\r\n          <AdminProductDetailsForm action='add' config={config} />\r\n        </Aux>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.admin.loading,\r\n    productDetails: state.admin.productDetails,\r\n    isProductEdited: state.admin.isProductEdited,\r\n    isProductDeleted: state.admin.isProductDeleted,\r\n    isProductAdded: state.admin.isProductAdded,\r\n    token: state.register.token,\r\n    userID: state.register.userID,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAddProduct: (data, token, userID) => dispatch(actionCreators.addProduct(data, token, userID)),\r\n    onUpdateProduct: (data, token, id) => dispatch(actionCreators.updateProduct(data, token, id)),\r\n    onRenderProductDetails: id => dispatch(actionCreators.fetchProductDetails(id)),\r\n  }\r\n}\r\n\r\nAdminProductDetails.propTypes = {\r\n  action: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AdminProductDetails));\r\n","import * as actionTypes from './actionTypes';\r\nimport ordersAxios from '../../../../../axios/axios-orders';\r\nimport usersAxios from '../../../../../axios/axios-users';\r\nimport productsAxios from '../../../../../axios/axios-products';\r\n\r\nconst load = () => {\r\n    return {\r\n        type: actionTypes.LOAD,\r\n    }\r\n}\r\n\r\n// > ################# Orders ##################\r\n\r\nconst renderOrders = ordersData => {\r\n    return {\r\n        type: actionTypes.RENDER_ORDERS,\r\n        ordersData,\r\n    }\r\n}\r\n\r\nconst fetchOrders = (token, page) => {\r\n    return dispatch => {\r\n        (async () => {\r\n            dispatch(load());\r\n\r\n            // ^ Fetching orders using their API\r\n            const response = await ordersAxios.get(`?pageNumber=${page}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }),\r\n                ordersData = response.data;\r\n\r\n            dispatch(renderOrders(ordersData));\r\n        })();\r\n    }\r\n}\r\n\r\n// > ################# Users ##################\r\n\r\nconst renderUsers = usersData => {\r\n    return {\r\n        type: actionTypes.RENDER_USERS,\r\n        usersData,\r\n    }\r\n}\r\n\r\nconst fetchUsers = (token, page) => {\r\n    return dispatch => {\r\n        (async () => {\r\n            dispatch(load());\r\n\r\n            // ^ Fetching users using their API\r\n            const response = await usersAxios.get(`/?pageNumber=${page}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }),\r\n                usersData = response.data;\r\n\r\n            dispatch(renderUsers(usersData));\r\n        })();\r\n    }\r\n}\r\n\r\nconst renderUserDetails = userDetails => {\r\n    return {\r\n        type: actionTypes.RENDER_USER_DETAILS,\r\n        userDetails,\r\n    }\r\n}\r\n\r\nconst fetchUserDetails = (token, id) => {\r\n    return dispatch => {\r\n        (async () => {\r\n            dispatch(load());\r\n\r\n            // ^ Fetching user details using users API\r\n            const response = await usersAxios.get(`/${id}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }),\r\n                userDetails = response.data.data;\r\n\r\n            dispatch(renderUserDetails(userDetails));\r\n        })();\r\n    }\r\n}\r\n\r\nconst emptyUserDetails = () => {\r\n    return {\r\n        type: actionTypes.EMPTY_USER_DETAILS,\r\n    }\r\n}\r\n\r\nconst editUser = (data, token, id) => {\r\n    return dispatch => {\r\n        (async () => {\r\n            dispatch(load());\r\n\r\n            // ^ Sending patch request to modify user details users API\r\n            await usersAxios.patch(`/${id}`, data, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n\r\n            dispatch(emptyUserDetails());\r\n        })();\r\n    }\r\n}\r\n\r\nconst considerDeletedUser = deletedUser => {\r\n    return {\r\n        type: actionTypes.CONSIDER_DELETED_USER,\r\n        deletedUser,\r\n    }\r\n}\r\n\r\nconst deleteUser = (token, id) => {\r\n    return dispatch => {\r\n        (async () => {\r\n            dispatch(load());\r\n\r\n            // ^ Fetching users using their API\r\n            const response = await usersAxios.delete(`/${id}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }),\r\n                deletedUser = response.data.data;\r\n\r\n            dispatch(considerDeletedUser(deletedUser));\r\n        })();\r\n    }\r\n}\r\n\r\nconst unsetUserEditedState = () => {\r\n    return {\r\n        type: actionTypes.UNSET_USER_EDITED_STATE,\r\n    }\r\n}\r\n\r\nconst unsetUserDeletedState = () => {\r\n    return {\r\n        type: actionTypes.UNSET_USER_DELETED_STATE,\r\n    }\r\n}\r\n\r\n// > ################# Products ##################\r\n\r\nconst renderProducts = (sliderProducts, nonSliderProductsData) => {\r\n    return {\r\n        type: actionTypes.RENDER_PRODUCTS,\r\n        sliderProducts,\r\n        nonSliderProductsData,\r\n    }\r\n}\r\n\r\nconst fetchProducts = page => {\r\n    return dispatch => {\r\n        (async () => {\r\n            dispatch(load());\r\n\r\n            // ^ Fetching slider products\r\n            const sliderResponse = await productsAxios.get(\"/getTopProducts\"),\r\n                sliderProducts = sliderResponse.data.data;\r\n\r\n            // ^ Fetching products other than slider products\r\n            const nonSliderResponse = await productsAxios.get(`/?keyword=&pageNumber=${page}`),\r\n                nonSliderProductsData = nonSliderResponse.data;\r\n\r\n            dispatch(renderProducts(sliderProducts, nonSliderProductsData));\r\n        })();\r\n    }\r\n}\r\n\r\nconst renderProductDetails = productDetails => {\r\n    return {\r\n        type: actionTypes.RENDER_ADMIN_PRODUCT_DETAILS,\r\n        details: productDetails,\r\n    }\r\n}\r\n\r\nconst fetchProductDetails = id => {\r\n    return dispatch => {\r\n        (async () => {\r\n            dispatch(load());\r\n\r\n            // ^ Fetching product details by its id\r\n            const response = await productsAxios.get(`/${id}`),\r\n                productDetails = response.data.data;\r\n\r\n            dispatch(renderProductDetails(productDetails));\r\n        })();\r\n    }\r\n}\r\n\r\nconst setProductEditedState = newProductDetails => {\r\n    return {\r\n        type: actionTypes.SET_PRODUCT_EDITED_STATE,\r\n        newProductDetails,\r\n    }\r\n}\r\n\r\nconst unsetProductEditedState = () => {\r\n    return {\r\n        type: actionTypes.UNSET_PRODUCT_EDITED_STATE,\r\n    }\r\n}\r\n\r\nconst updateProduct = (product, token, id) => {\r\n    return dispatch => {\r\n        (async () => {\r\n            dispatch(load());\r\n\r\n            // ^ Sending PATCH request \r\n            const response = await productsAxios.patch(`/${id}`, product, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }),\r\n                newProductDetails = response.data.data;\r\n\r\n            dispatch(setProductEditedState(newProductDetails));\r\n        })();\r\n    }\r\n}\r\n\r\nconst setProductAddedState = addedProductDetails => {\r\n    return {\r\n        type: actionTypes.SET_PRODUCT_ADDED_STATE,\r\n        addedProductDetails,\r\n    }\r\n}\r\n\r\nconst unsetProductAddedState = () => {\r\n    return {\r\n        type: actionTypes.UNSET_PRODUCT_ADDED_STATE,\r\n    }\r\n}\r\n\r\nconst addProduct = (product, token, userID) => {\r\n    return dispatch => {\r\n        (async () => {\r\n            /* \r\n            {\r\n                \"name\":\"Sample Name\",\r\n                \"price\":0,\r\n                \"image\":\"/images/sample.png\",\r\n                \"brand\":\"Sample Brand\",\r\n                \"category\":\"Sample Category\",\r\n                \"countInStock\":0,\r\n                \"description\":\"Sample description\"\r\n                !!!!!!\r\n                \"user\":\"5ff1b0d84d610d00046fb016\",\r\n                \"numReviews\":0,\r\n            }\r\n            */\r\n\r\n            // ^ Making the request body\r\n            // ^ Adding user (user id) and numReviews in the request body\r\n            const requestBody = {\r\n                ...product,\r\n                user: userID,\r\n                numReviews: 0,\r\n            };\r\n\r\n            dispatch(load());\r\n\r\n            // ^ Sending POST request \r\n            const response = await productsAxios.post('', requestBody, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }),\r\n                addedProductDetails = response.data.data;\r\n\r\n            dispatch(setProductAddedState(addedProductDetails));\r\n        })();\r\n    }\r\n}\r\n\r\nconst considerDeletedProduct = deletedProduct => {\r\n    return {\r\n        type: actionTypes.CONSIDER_DELETED_PRODUCT,\r\n        deletedProduct,\r\n    } \r\n}\r\n\r\nconst deleteProduct = (token, productID) => {\r\n    return dispatch => {\r\n        (async () => {\r\n            dispatch(load());\r\n\r\n            // Sending DELETE Request\r\n            const response = await productsAxios.delete(`/${productID}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                }\r\n            }),\r\n                deletedProduct = response.data.data;\r\n\r\n            dispatch(considerDeletedProduct(deletedProduct));\r\n        })();\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchOrders,\r\n    fetchUsers,\r\n    fetchUserDetails,\r\n    editUser,\r\n    deleteUser,\r\n    unsetUserEditedState,\r\n    unsetUserDeletedState,\r\n    fetchProducts,\r\n    fetchProductDetails,\r\n    updateProduct,\r\n    unsetProductEditedState,\r\n    addProduct,\r\n    deleteProduct,\r\n    unsetProductAddedState,\r\n}","import React from \"react\";\r\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nconst withRouter = Component => {\r\n  return props => (\r\n    <Component\r\n      {...props}\r\n      params={useParams()}\r\n      navigate={useNavigate()}\r\n      location={useLocation()}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter;\r\n"],"names":["instance","axios","baseURL","props","outStyles","fontWeight","padding","fontSize","backgroundColor","type","className","classes","style","onClick","clicked","children","useState","form","setForm","formElementsArr","key","push","id","config","onSubmit","e","preventDefault","formItemsData","dataItem","elementType","checkedElementIndex","elementConfig","findIndex","checked","checkedElementValue","value","dataProcessed","map","element","Input","name","changed","inputIdentifier","updatedForm","target","inputChangedHandler","Button","buttonText","inputElement","loading","SetLoading","fileURL","setFileURL","uploadHandler","formData","FormData","append","files","uploadAxios","response","imageURL","data","path","console","log","onChange","required","placeholder","accept","Loader","size","htmlFor","options","opt","displayValue","i","join","loaderContStyle","width","height","loaderStyle","borderWidth","action","productDetails","price","min","image","brand","category","countInStock","description","productDetailsForm","Form","process","AdminProductDetails","this","onRenderProductDetails","params","sectionTitle","productData","onAddProduct","token","userID","onUpdateProduct","isProductEdited","alert","navigate","isProductAdded","SectionTitle","Component","connect","state","admin","isProductDeleted","register","dispatch","actionCreators","withRouter","load","actionTypes","renderOrders","ordersData","fetchOrders","page","ordersAxios","headers","Authorization","renderUsers","usersData","fetchUsers","usersAxios","renderUserDetails","userDetails","fetchUserDetails","editUser","considerDeletedUser","deletedUser","deleteUser","unsetUserEditedState","unsetUserDeletedState","renderProducts","sliderProducts","nonSliderProductsData","fetchProducts","productsAxios","sliderResponse","nonSliderResponse","renderProductDetails","details","fetchProductDetails","setProductEditedState","newProductDetails","unsetProductEditedState","updateProduct","product","setProductAddedState","addedProductDetails","unsetProductAddedState","addProduct","requestBody","user","numReviews","considerDeletedProduct","deletedProduct","deleteProduct","productID","useParams","useNavigate","location","useLocation"],"sourceRoot":""}