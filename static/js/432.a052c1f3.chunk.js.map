{"version":3,"file":"static/js/432.a052c1f3.chunk.js","mappings":"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","sources":["webpack://online-store/./src/components/general/UI/Button/Button.module.css?6c05","components/general/UI/Button/Button.js","webpack://online-store/./src/components/general/UI/Form/Form.module.css?138a","components/general/UI/Form/Form.js","webpack://online-store/./src/components/general/UI/Input/Input.module.css?a495","axios/axios-upload.js","components/general/UI/Input/Input.js","webpack://online-store/./src/components/general/UI/Loader/Loader.module.css?ddc0","components/general/UI/Loader/Loader.js","webpack://online-store/./src/components/general/UI/SectionTitle/SectionTitle.module.css?6e39","components/general/UI/SectionTitle/SectionTitle.js","webpack://online-store/./src/components/register/SignIn/SignIn.module.css?734c","components/register/SignIn/SignIn.js","webpack://online-store/./src/components/register/SignUp/SignUp.module.css?11ca","components/register/SignUp/SignUp.js","containers/Layout/Register/Register.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"Button_Button__Ip4AH\"};","import React from \"react\";\r\nimport classes from \"./Button.module.css\";\r\n\r\nconst Button = props => {\r\n  const outStyles = {\r\n    fontWeight: props.fontWeight,\r\n    padding: props.padding,\r\n    fontSize: props.fontSize,\r\n    backgroundColor: props.backgroundColor,\r\n  };\r\n\r\n  return (\r\n    <button\r\n      type=\"submit\"\r\n      className={classes.Button}\r\n      style={outStyles}\r\n      onClick={props.clicked}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Form\":\"Form_Form__ZktGn\"};","import React, { useState } from \"react\";\r\nimport classes from \"./Form.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport Input from \"../Input/Input\";\r\nimport Button from \"../Button/Button\";\r\n\r\nconst Form = props => {\r\n  const [form, setForm] = useState({ ...props.form });\r\n\r\n  // > Recording the value of the input while user typing\r\n  const inputChangedHandler = (e, inputIdentifier) => {\r\n    // ^ Copying the form and mutate it\r\n    const updatedForm = {\r\n      ...form,\r\n      [inputIdentifier]: {\r\n        ...form[inputIdentifier],\r\n        value: e.target.value,\r\n      },\r\n    };\r\n\r\n    // ^ Finally, updating the state with the new value recorded\r\n    setForm(updatedForm);\r\n  };\r\n\r\n  // > Submit Handler (Returning the data from the form)\r\n  const submitForm = e => {\r\n    e.preventDefault();\r\n\r\n    // ^ Collecting the data of form items\r\n    const formItemsData = {};\r\n\r\n    for (const dataItem in form) {\r\n      if (form[dataItem].elementType === \"radioInput\") {\r\n        const checkedElementIndex = form[dataItem].elementConfig.findIndex(\r\n          config => config.checked\r\n        );\r\n        const checkedElementValue = form[dataItem].value[checkedElementIndex];\r\n\r\n        formItemsData[dataItem] = checkedElementValue;\r\n      } else {\r\n        formItemsData[dataItem] = form[dataItem].value;\r\n      }\r\n    }\r\n\r\n    // ^ Process the data collected as needed (in the component that contain the form)\r\n    props.dataProcessed(formItemsData);\r\n  };\r\n\r\n  // ^ Converting the form elements into an array to map them\r\n  let formElementsArr = [];\r\n  for (const key in form) {\r\n    formElementsArr.push({ id: key, config: form[key] });\r\n  }\r\n\r\n  return (\r\n    <form className={classes.Form} onSubmit={submitForm}>\r\n      {formElementsArr.map(element => {\r\n        return (\r\n          <Input\r\n            key={element.id}\r\n            elementType={element.config.elementType}\r\n            elementConfig={element.config.elementConfig}\r\n            name={element.id}\r\n            value={element.config.value}\r\n            changed={e => {\r\n              inputChangedHandler(e, element.id);\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n      <Button fontWeight=\"400\" fontSize=\"1.1rem\">\r\n        {props.buttonText}\r\n      </Button>\r\n      {props.children}\r\n    </form>\r\n  );\r\n};\r\n\r\nForm.propTypes = {\r\n  form: PropTypes.object.isRequired,\r\n  buttonText: PropTypes.string.isRequired,\r\n  dataProcessed: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Input\":\"Input_Input__vjpSZ\",\"SelectInput\":\"Input_SelectInput__rnzqj\",\"Textarea\":\"Input_Textarea__R5rtu\",\"FileInputContainer\":\"Input_FileInputContainer__hBKVf\",\"FileURLInput\":\"Input_FileURLInput__8VW7i\",\"FileInput\":\"Input_FileInput__EyR8R\",\"FileInputLabel\":\"Input_FileInputLabel__76CSO\",\"loaderContainer\":\"Input_loaderContainer__J3EUt\",\"RadioInputContainer\":\"Input_RadioInputContainer__4ICrx\",\"RadioInput\":\"Input_RadioInput__pkzl2\",\"RadioInputLabel\":\"Input_RadioInputLabel__VZaSW\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://amh-store.herokuapp.com/api/v1/upload/\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useState } from \"react\";\r\nimport classes from \"./Input.module.css\";\r\nimport Aux from \"../../../../hoc/Auxiliary/Auxiliary\";\r\nimport uploadAxios from \"../../../../axios/axios-upload\";\r\nimport Loader from \"../../../general/UI/Loader/Loader\";\r\n\r\nconst Input = props => {\r\n  let inputElement = null,\r\n    [loading, SetLoading] = useState(false),\r\n    [fileURL, setFileURL] = useState(\"\");\r\n\r\n  // > Handler for file input type\r\n  const uploadHandler = async e => {\r\n    try {\r\n      const formData = new FormData();\r\n\r\n      formData.append(\"image\", e.target.files[0]);\r\n\r\n      SetLoading(true);\r\n\r\n      // ^ Posting the file to the server endpoint\r\n      const response = await uploadAxios.post(\"\", formData);\r\n\r\n      // ^ Catching the image URL\r\n      const imageURL = response.data.path;\r\n      setFileURL(imageURL);\r\n      SetLoading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  switch (props.elementType) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={classes.Input}\r\n          {...props.elementConfig}\r\n          name={props.name}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n          required\r\n        />\r\n      );\r\n      break;\r\n\r\n    case \"fileInput\":\r\n      inputElement = (\r\n        <div className={classes.FileInputContainer}>\r\n          <input\r\n            className={classes.FileURLInput}\r\n            type=\"url\"\r\n            placeholder={props.elementConfig.placeholder}\r\n            name={props.name}\r\n            value={fileURL || props.value}\r\n            onChange={props.changed}\r\n            required\r\n          />\r\n          <input\r\n            className={classes.FileInput}\r\n            type={props.elementConfig.type}\r\n            accept={props.elementConfig.accept}\r\n            onChange={uploadHandler}\r\n            id={props.name}\r\n          />\r\n          <div className={classes.loaderContainer}>\r\n            {loading ? <Loader size=\"small\" /> : null}\r\n          </div>\r\n          <label className={classes.FileInputLabel} htmlFor={props.name}>\r\n            Upload\r\n          </label>\r\n        </div>\r\n      );\r\n      break;\r\n\r\n    case \"select\":\r\n      inputElement = (\r\n        <select\r\n          className={classes.SelectInput}\r\n          name={props.name}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        >\r\n          {props.elementConfig.options.map(opt => (\r\n            <option key={opt.value} value={opt.value}>\r\n              {opt.displayValue}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n\r\n    case \"radioInput\":\r\n      inputElement = (\r\n        <div className={classes.RadioInputContainer}>\r\n          {props.elementConfig.map((config, i) => {\r\n            return (\r\n              <Aux key={props.value[i]}>\r\n                <input\r\n                  className={classes.RadioInput}\r\n                  {...config}\r\n                  name={props.name[i]}\r\n                  value={props.value[i]}\r\n                  id={props.value[i]}\r\n                />\r\n                <label\r\n                  className={classes.RadioInputLabel}\r\n                  htmlFor={props.value[i]}\r\n                >\r\n                  {props.value[i]}\r\n                </label>\r\n              </Aux>\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n      break;\r\n\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={[classes.Input, classes.Textarea].join(\" \")}\r\n          {...props.elementConfig}\r\n          name={props.value}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n          required\r\n        ></textarea>\r\n      );\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return <Aux>{inputElement}</Aux>;\r\n};\r\n\r\nexport default Input;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"loaderContainer\":\"Loader_loaderContainer__pwLPQ\",\"loader\":\"Loader_loader__ZEPsn\",\"pie-fill\":\"Loader_pie-fill__mI6y7\"};","import React from \"react\";\r\nimport classes from \"./Loader.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Loader = props => {\r\n  const loaderContStyle =\r\n      props.size === \"small\"\r\n        ? {\r\n            width: \"40px\",\r\n            height: \"40px\",\r\n          }\r\n        : {\r\n            width: \"80px\",\r\n            height: \"80px\",\r\n          },\r\n    loaderStyle =\r\n      props.size === \"small\"\r\n        ? {\r\n            borderWidth: \"20px\",\r\n          }\r\n        : {\r\n            borderWidth: \"40px\",\r\n          };\r\n\r\n  return (\r\n    <div className={classes.loaderContainer} style={loaderContStyle}>\r\n      <span className={classes.loader} style={loaderStyle}></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoader.propTypes = {\r\n  size: PropTypes.string,\r\n};\r\n\r\nexport default Loader;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"SectionTitle\":\"SectionTitle_SectionTitle__k-YvA\"};","import React from 'react';\r\nimport classes from './SectionTitle.module.css';\r\n\r\nconst SectionTitle = props => {\r\n  return <h1 className={classes.SectionTitle}>{props.children}</h1>;\r\n}\r\n\r\nexport default SectionTitle;","// extracted by mini-css-extract-plugin\nexport default {\"newCustomer\":\"SignIn_newCustomer__yI+pA\"};","import React, { useState } from \"react\";\r\nimport classes from \"./SignIn.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport SectionTitle from \"../../general/UI/SectionTitle/SectionTitle\";\r\nimport Form from \"../../general/UI/Form/Form\";\r\n\r\nconst SignIn = props => {\r\n  const [signInForm] = useState({\r\n    email: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"email\",\r\n        placeholder: \"Enter your email\",\r\n      },\r\n      value: \"\",\r\n    },\r\n    password: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"password\",\r\n        placeholder: \"Enter your password\",\r\n      },\r\n      value: \"\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <section className={classes.SignIn}>\r\n      <SectionTitle>Sign in</SectionTitle>\r\n      <Form\r\n        form={signInForm}\r\n        buttonText=\"Sign in\"\r\n        dataProcessed={signInData => props.onSignIn(signInData, false)}\r\n      >\r\n        <p className={classes.newCustomer}>\r\n          New customer? &nbsp;<Link to=\"/register/signup\">Sign up</Link>\r\n        </p>\r\n      </Form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"existedCustomer\":\"SignUp_existedCustomer__UE9B-\"};","import React, { useState } from \"react\";\r\nimport classes from \"./SignUp.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport SectionTitle from \"../../general/UI/SectionTitle/SectionTitle\";\r\nimport Form from \"../../general/UI/Form/Form\";\r\n\r\nconst SignUp = props => {\r\n  const [signUpForm] = useState({\r\n    username: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"text\",\r\n        placeholder: \"Enter your name\",\r\n      },\r\n      value: \"\",\r\n    },\r\n    email: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"email\",\r\n        placeholder: \"Enter your email\",\r\n      },\r\n      value: \"\",\r\n    },\r\n    password: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"password\",\r\n        placeholder: \"Enter your password\",\r\n      },\r\n      value: \"\",\r\n    },\r\n    passwordConfirm: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"password\",\r\n        placeholder: \"Confirm your password\",\r\n      },\r\n      value: \"\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <section className={classes.SignUp}>\r\n      <SectionTitle>Sign up</SectionTitle>\r\n      <Form\r\n        form={signUpForm}\r\n        buttonText=\"Sign up\"\r\n        dataProcessed={signUpData => props.onSignUp(signUpData, true)}\r\n      >\r\n        <p className={classes.existedCustomer}>\r\n          Already a customer? &nbsp;<Link to=\"/register/signin\">Sign in</Link>\r\n        </p>\r\n      </Form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React, { Component } from \"react\";\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from './store/actions/actionCreators';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport Aux from \"../../../hoc/Auxiliary/Auxiliary\";\r\nimport SignIn from \"../../../components/register/SignIn/SignIn\";\r\nimport SignUp from \"../../../components/register/SignUp/SignUp\";\r\n\r\nclass Register extends Component {\r\n\r\n  componentDidMount() {\r\n    if (!this.props.isOrdering && this.props.authRedirectPath !== '/') {\r\n      this.props.onChangeAuthRedirectPath('/');\r\n    }\r\n  }\r\n\r\n  registerHandler = (registerData, isSignUp) => {\r\n    this.props.onRegister(registerData, isSignUp);\r\n  }\r\n\r\n  render() {\r\n    // ^ Once authenticated the user is redirected to the authentication redirect path\r\n    if (this.props.isAuthenticated) return <Navigate to={this.props.authRedirectPath} />\r\n\r\n    return (\r\n      <Aux>\r\n        <Helmet>\r\n          <title>Online Store | Register</title>\r\n        </Helmet>\r\n\r\n        <Routes>\r\n          <Route path=\"signin\" element={<SignIn onSignIn={this.registerHandler} />} />\r\n          <Route path=\"signup\" element={<SignUp onSignUp={this.registerHandler} />} />\r\n        </Routes>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authRedirectPath: state.register.authRedirectPath,\r\n    isAuthenticated: state.register.token !== null,\r\n    isOrdering: state.cart.ordering,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onRegister: (data, isSignUp) => dispatch(actionCreators.register(data, isSignUp)),\r\n    onChangeAuthRedirectPath: path =>\r\n      dispatch(actionCreators.changeAuthRedirectPath(path)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n"],"names":["props","outStyles","fontWeight","padding","fontSize","backgroundColor","type","className","classes","style","onClick","clicked","children","useState","form","setForm","formElementsArr","key","push","id","config","onSubmit","e","preventDefault","formItemsData","dataItem","elementType","checkedElementIndex","elementConfig","findIndex","checked","checkedElementValue","value","dataProcessed","map","element","Input","name","changed","inputIdentifier","updatedForm","target","inputChangedHandler","Button","buttonText","axios","baseURL","inputElement","loading","SetLoading","fileURL","setFileURL","uploadHandler","formData","FormData","append","files","uploadAxios","response","imageURL","data","path","console","log","onChange","required","placeholder","accept","Loader","size","htmlFor","options","opt","displayValue","i","join","loaderContStyle","width","height","loaderStyle","borderWidth","email","password","signInForm","SectionTitle","Form","signInData","onSignIn","to","username","passwordConfirm","signUpForm","signUpData","onSignUp","Register","registerHandler","registerData","isSignUp","onRegister","this","isOrdering","authRedirectPath","onChangeAuthRedirectPath","isAuthenticated","Helmet","Component","connect","state","register","token","cart","ordering","dispatch","actionCreators"],"sourceRoot":""}